
#####################################################################
#   helper_macros.cfg
#####################################################################


[delayed_gcode PRINTER_STARTUP]
initial_duration: 2
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_runout ENABLE=0
    QUERY_AIR_FILTER
    M300 S2000 P50


##-------------------------------------------------------------------


[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        M117 -> Homing
        STATUS_HOMING                                                          #NeoPixel status homing
        G28                                                                    #full homing
        M117
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        M117 -> Quad Gantry Leveling
        QUAD_GANTRY_LEVEL
        M117 -> Homing Z
        STATUS_HOMING
        NOZZLE_BRUSH
        G28 Z
        M117
    {% endif %}


#--------------------------------------------------------------------


[gcode_macro CALIBRATE_Z_OFFSET]
gcode:
    CG28                                                                       #conditional homing
    CQGL                                                                       #conditional quad gantry leveling
    CALIBRATE_Z                                                                #calibrate z


##-------------------------------------------------------------------


[gcode_macro BED_MESH]
gcode:
    CG28                                                                       #conditional homing
    CQGL                                                                       #conditional quad gantry leveling
    BED_MESH_CALIBRATE                                                         #bed mesh calibrate


##-------------------------------------------------------------------


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z20 F12000
    RESTORE_GCODE_STATE NAME=STATE_G32


##-------------------------------------------------------------------


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1


##-------------------------------------------------------------------


[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1


##-------------------------------------------------------------------


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G91
    G1 E50 F{speed}
    G92 E0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT


##-------------------------------------------------------------------


[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    G91
    G1 E-50 F{speed}
    G92 E0
    G90
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT


##-------------------------------------------------------------------


[gcode_macro MOVE_CENTER_020]
gcode:
    SAVE_GCODE_STATE NAME=STATE_MOVE_CENTER_020
    G90
    {% set speed = params.SPEED|default(50) * 60 %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
	    {action_raise_error("No homing is performed, need to home all axis first!")}
    {% else %}
        {action_respond_info("Move toolhead to bedcenter X175 Y175 Z20")}
        G90                                                                   #set to absolute coordinates
        G0 X175 Y175 Z20 F{speed}                                             #move to bed center
    {% endif %}
    RESTORE_GCODE_STATE NAME=STATE_MOVE_CENTER_020


##-------------------------------------------------------------------


[gcode_macro MOVE_CENTER_100]
gcode:
    SAVE_GCODE_STATE NAME=STATE_MOVE_CENTER_100
    G90
    {% set speed = params.SPEED|default(50) * 60 %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
	    {action_raise_error("No homing is performed, need to home all axis first!")}
    {% else %}
        {action_respond_info("Move toolhead to bedcenter X175 Y175 Z100")}
        G90                                                                   #set to absolute coordinates
        G0 X175 Y175 Z100 F{speed}                                            #move to bed center
    {% endif %}
    RESTORE_GCODE_STATE NAME=STATE_MOVE_CENTER_100


##-------------------------------------------------------------------


[gcode_macro SKIP_HEATSOAK]
gcode:
    {% set SKIP_HEAT_SOAK = printer["gcode_macro PRINT_START"].skip_heatsoak %}

    {% if (SKIP_HEAT_SOAK == False) %}
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=skip_heatsoak VALUE={ True }
        RESPOND TYPE=error MSG="HEATSOAK: Skipped next Print"
    {% else %}
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=skip_heatsoak VALUE={ False }
        RESPOND TYPE=error MSG="HEATSOAK: Active next Print"
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro SHUTDOWN_HOST]
variable_shutdown_state: False
gcode:
    {% set SHUTDOWN_STATE = printer["gcode_macro SHUTDOWN_HOST"].shutdown_state %}

    {% if (SHUTDOWN_STATE == False) %}
        RESPOND TYPE=error MSG="SHUTDOWN: Press again to shutdown host"
        SET_GCODE_VARIABLE MACRO=SHUTDOWN_HOST VARIABLE=shutdown_state VALUE={ True }
    {% else %}
	    {action_call_remote_method("shutdown_machine")}
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro M109]
description: This just makes Klipper resume immediately after reaching temp (S)
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set out = ['mcu build version:'] %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% if name2 is in ['mcu_version'] %}
        {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}
  M115.1


##-------------------------------------------------------------------


[gcode_macro M600]
description: Pause print for filament change
gcode:
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=colorchange VALUE='"true"'
    PAUSE


##-------------------------------------------------------------------


[gcode_macro M900]
description: Set pressure advance (K)
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

