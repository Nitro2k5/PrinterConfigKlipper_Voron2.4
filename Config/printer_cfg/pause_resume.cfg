
#####################################################################
#   pause_resume.cfg
#####################################################################


#Based on: https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/macros/useful_macros.md

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: BASE_PAUSE

gcode:
    # Parameters
    {% set retract = params.RETRACT|default(1.0)|float %}                                        ; retract amount
    {% set z = params.Z|default(10)|int %}                                                       ; z hop amount

    #skip if axis not homed
    {% if "xyz" in printer.toolhead.homed_axes %}
        #skip if already in pause
        {% if printer['pause_resume'].is_paused|int == 0 %}

            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
            SET_FILAMENT_SENSOR SENSOR=filament_runout ENABLE=0                                  ; disable filament sensor       

            SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
            BASE_PAUSE                                                                           ; pause print

            {action_respond_info("--- Printer PAUSED ---")}

            #retract if possible
            {% if printer.extruder.can_extrude|lower == 'true' %}
                M83                                                                              ; Use relative distances for extrusion
                G1 E-{ retract } F2100                                                           ; Retract variable_extrude (F2100 = 35mm/s)

                {% if printer.gcode_move.absolute_extrude|lower == 'true' %}
                    M82                                                                          ; Use absolute distances for extrusion
                {% endif %}

                {action_respond_info("Retract value: %1.2fmm" % (retract))}                       ; ggf vor f eine Zahl einfügen
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=extrude VALUE={ retract }               ; set resume variable to extruded amount
            {% else %}
                {action_respond_info("Extruder not hot enough for retract")}                     ; if extruder is not hot enough, show message and set zhop value for resume to 0
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=extrude VALUE=0                         ; set resume variable to extruded amount
            {% endif %}

            # check zhop position
            {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
                G91                                                                              ; relative positioning
                G1 Z{z} F900                                                                     ; raise Z up by z hop amount (F900 = 15mm/s)
                {action_respond_info("Z-Hop value: %2.2fmm" % (z))}                              ; ggf vor i eine Zahl einfügen
            {% else %}
                { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
            {% endif %}

            #move XY to front center
            G90                                                                                  ; absolute positioning
            G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
            {action_respond_info("Park toolhead at:")}
            {action_respond_info("X: %3.2fmm" % (printer.toolhead.axis_maximum.x/2))}             ; ggf vor f eine Zahl einfügen
            {action_respond_info("Y: %3.2fmm" % (printer.toolhead.axis_minimum.y+5))}             ; ggf vor f eine Zahl einfügen

            SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 

            M104 S0                                                                              ; turn off hotend
            {action_respond_info("Turn off extruder heater")}

            SET_IDLE_TIMEOUT TIMEOUT=86400                                                       ; set timeout to 24 hours
            {action_respond_info("Set idle timeout to: 86400 (24h)")}

            {action_respond_info("Waiting...")}
        {% endif %}

    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: BASE_RESUME
variable_extrude: 1.0
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(0.0)|float + extrude %}                              ; hotend prime amount (in mm)

    #check if print is paused
    {% if printer['pause_resume'].is_paused|int == 1 %}

        {action_respond_info("--- Print RESUMED ---")}

        SET_FILAMENT_SENSOR SENSOR=filament_runout ENABLE=1                          ; enable filament sensor
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value

        {% if etemp > 0 %}
            {action_respond_info("Wait for hotend temp: %3.1f°C" % (etemp))}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% else %}
            {action_respond_info("No hotend temp is set, resume without heating")}
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  

        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning

        #check if extrude temp is reached
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            {action_respond_info("Load Filament")}
            BEEP
            BEEP
            #G1 E{5} F900
            #G1 E{-1} F900
            {action_respond_info("Wait 5 sec - Clean Nozzle!")}
            G4 P5000
            BEEP
            #{action_respond_info("Prime nozzle and lower Z")}
            #G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
            G1 Z{zhop * -1} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            {action_respond_info("Lower Z")}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        {action_respond_info("Resume print...")}
        BASE_RESUME                                                                  ; resume print
    {% endif %}


##-------------------------------------------------------------------


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}      ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    {action_respond_info("--- CANCELING Print ---")}
    PRINT_END
    CANCEL_PRINT_BASE

